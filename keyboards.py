from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove

menu = [
    [InlineKeyboardButton(text="‚è∞ –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è", callback_data="getCurrentTime"),
    InlineKeyboardButton(text="üìù –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á", callback_data="planner")]
]

planner = [
    [InlineKeyboardButton(text="‚úç –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É", callback_data="newPlan"),
    InlineKeyboardButton(text="üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", callback_data="checkPlanner")],
    [InlineKeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", callback_data="menu")]
]

plans_list = [
    [InlineKeyboardButton(text="üìõ –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É", callback_data="removePlan"),
    InlineKeyboardButton(text="‚ùå –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª", callback_data="clearPlanner")],
    [InlineKeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", callback_data="menu")]
]

dates = [
    [InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="choseToday")],
    [InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞", callback_data="choseTomorrow"),
    InlineKeyboardButton(text="–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞", callback_data="choseDayAfterTomorrow")]
]

times = [
    [InlineKeyboardButton(text="10:00", callback_data="time10:00"),
    InlineKeyboardButton(text="12:00", callback_data="time12:00"),
    InlineKeyboardButton(text="15:00", callback_data="time15:00")],
    [InlineKeyboardButton(text="18:00", callback_data="time18:00"),
    InlineKeyboardButton(text="20:00", callback_data="time20:00"),
    InlineKeyboardButton(text="22:00", callback_data="time22:00")],
]

plans_list_kb = InlineKeyboardMarkup(inline_keyboard=plans_list)
planner_kb = InlineKeyboardMarkup(inline_keyboard=planner)
dates_kb = InlineKeyboardMarkup(inline_keyboard=dates)
times_kb = InlineKeyboardMarkup(inline_keyboard=times)
menu = InlineKeyboardMarkup(inline_keyboard=menu)

# –°–æ–∑–¥–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def createKeyboard(jobsList: list) -> InlineKeyboardMarkup:
    targetList = []
    stepList = []
# –î–æ–±–∞–≤–ª—è—Ç—å –≤ –º–∞—Å—Å–∏–≤ –ø–∞—Ä—ã –∫–ª–∞–≤–∏—à (–º–∞—Å—Å–∏–≤—ã)
    for i in range(len(jobsList)):
        stepList.append(InlineKeyboardButton(text=jobsList[i].name, callback_data=jobsList[i].id))
        if((i+1)%2 == 0):
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∞—Ä–µ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏ –≤ targetList –∏ –æ–±–Ω—É–ª—è–µ–º stepList
            targetList.append(stepList.copy())
            stepList = []

    # –ï—Å–ª–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—á 1, 3, 5 –∏ —Ç –¥, —Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –≤ –ø–∞—Ä–µ –∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ targetList
    # –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Ç—É—Ç
    if(len(jobsList) % 2 != 0):
        targetList.append(stepList.copy())
    return InlineKeyboardMarkup(inline_keyboard=targetList)

#exit_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")]], resize_keyboard=True)
#iexit_kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", callback_data="menu")]])